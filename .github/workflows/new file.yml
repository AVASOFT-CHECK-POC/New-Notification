name: BTMS Build

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      MS_TEAMS_WEBHOOK_URI:
        required: true
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref (branch, tag, sha) to build"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GIT_REF: ${{ inputs.ref }}
      IMAGE_TAG: ${{ inputs.ref }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.ref }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push apache image
        uses: docker/build-push-action@v2
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: sunteck/btms-apache
        with:
          context: btms/apache/
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-to: type=inline

      - name: Build and push php image
        uses: docker/build-push-action@v2
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: sunteck/btms-php
        with:
          context: btms/php/
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-to: type=inline

      - name: Build and push rails image
        uses: docker/build-push-action@v2
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: sunteck/btms-rails
        with:
          context: btms/rails/
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-to: type=inline

      - name: Build and push cron image
        uses: docker/build-push-action@v2
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: sunteck/btms-cron
        with:
          context: btms/provision/
          file: ./btms/provision/Dockerfile.cron
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.ECR_REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-to: type=inline
          build-args: |
            BRANCH=${{ env.IMAGE_TAG }}

  notify-team-start:
    runs-on: ubuntu-latest
    steps:
      - name: Team Notify Start
        uses: toko-bifrost/ms-teams-deploy-card@3.1.2
        with:
          github-token: ${{ github.token }}
          webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          timezone: US/Eastern

  notify-team-success:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Team Notify of Success
        uses: toko-bifrost/ms-teams-deploy-card@3.1.2
        with:
          github-token: ${{ github.token }}
          webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          timezone: US/Eastern


  notify-team-failure:
    if: failure()
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Team Notify of Failure
        uses: toko-bifrost/ms-teams-deploy-card@3.1.2
        with:
          github-token: ${{ github.token }}
          webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
          timezone: US/Eastern
